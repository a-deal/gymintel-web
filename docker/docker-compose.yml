version: '3.8'

services:
  # PostgreSQL with PostGIS extension
  database:
    image: postgis/postgis:15-3.3
    container_name: gymintel-db
    environment:
      POSTGRES_USER: ${DATABASE_USER:-gymintel}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-gymintel_dev}
      POSTGRES_DB: ${DATABASE_NAME:-gymintel}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gymintel -d gymintel"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI backend with GraphQL
  backend:
    image: python:3.11
    container_name: gymintel-backend
    working_dir: /app
    environment:
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
      - DATABASE_NAME=${DATABASE_NAME:-gymintel}
      - DATABASE_USER=${DATABASE_USER:-gymintel}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-gymintel_dev}
      - YELP_API_KEY=${YELP_API_KEY}
      - GOOGLE_PLACES_API_KEY=${GOOGLE_PLACES_API_KEY}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
      - ../../gymintel-cli/src:/app/cli_services  # Mount CLI services
      - pip_cache:/root/.cache/pip
    depends_on:
      database:
        condition: service_healthy
    command: >
      sh -c "pip install -r requirements.txt &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React frontend
  frontend:
    image: node:18-alpine
    container_name: gymintel-frontend
    working_dir: /app
    environment:
      - VITE_GRAPHQL_ENDPOINT=http://localhost:8000/graphql
      - VITE_MAPBOX_ACCESS_TOKEN=${MAPBOX_ACCESS_TOKEN}
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - npm_cache:/root/.npm
    depends_on:
      - backend
    command: >
      sh -c "npm install &&
             npm run dev -- --host 0.0.0.0 --port 3000"

  # Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    container_name: gymintel-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pip_cache:
    driver: local
  npm_cache:
    driver: local

networks:
  default:
    name: gymintel-network
