#!/bin/bash

# GymIntel Web Development Environment Starter
echo "üèãÔ∏è GymIntel Web Development Environment"
echo "======================================="
echo

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker is not running. Please start Docker and try again."
    exit 1
fi

# Check if docker-compose -f ../docker/docker-compose.yml is available
if ! command -v docker-compose -f ../docker/docker-compose.yml &> /dev/null; then
    echo "‚ùå docker-compose -f ../docker/docker-compose.yml could not be found. Please install Docker Compose."
    exit 1
fi

echo "üîß Starting GymIntel development environment..."
echo

# Stop any existing containers
echo "üõë Stopping existing containers..."
docker-compose -f ../docker/docker-compose.yml down

# Build and start services
echo "üöÄ Building and starting services..."
docker-compose -f ../docker/docker-compose.yml up --build -d

# Wait for services to be healthy
echo "‚è≥ Waiting for services to be ready..."
sleep 10

# Check service status
echo "üìä Service Status:"
echo "=================="

# Check PostgreSQL
if docker-compose -f ../docker/docker-compose.yml ps postgres | grep -q "Up"; then
    echo "‚úÖ PostgreSQL: Running"
else
    echo "‚ùå PostgreSQL: Not running"
fi

# Check Backend
if docker-compose -f ../docker/docker-compose.yml ps backend | grep -q "Up"; then
    echo "‚úÖ Backend: Running"
else
    echo "‚ùå Backend: Not running"
fi

# Check Frontend
if docker-compose -f ../docker/docker-compose.yml ps frontend | grep -q "Up"; then
    echo "‚úÖ Frontend: Running"
else
    echo "‚ùå Frontend: Not running"
fi

echo
echo "üåê Your GymIntel Web Application is ready!"
echo "=========================================="
echo
echo "üìç Available URLs:"
echo "  ‚Ä¢ Frontend Application: http://localhost:3000"
echo "  ‚Ä¢ GraphQL Playground: http://localhost:8000/graphql"
echo "  ‚Ä¢ API Documentation: http://localhost:8000/docs"
echo "  ‚Ä¢ API Health Check: http://localhost:8000/health"
echo "  ‚Ä¢ PostgreSQL: localhost:5432"
echo
echo "üîß Useful Commands:"
echo "  ‚Ä¢ View logs: docker-compose -f ../docker/docker-compose.yml logs -f [service]"
echo "  ‚Ä¢ Stop all: docker-compose -f ../docker/docker-compose.yml down"
echo "  ‚Ä¢ Restart: docker-compose -f ../docker/docker-compose.yml restart [service]"
echo "  ‚Ä¢ Shell access: docker-compose -f ../docker/docker-compose.yml exec [service] bash"
echo
echo "üí° Try this GraphQL query:"
echo "   query { listMetropolitanAreas { name code state } }"
echo
echo "üé® Features:"
echo "  ‚Ä¢ JetBrains Mono typography for headings"
echo "  ‚Ä¢ Monospace fonts for body text"
echo "  ‚Ä¢ Tailwind UI components"
echo "  ‚Ä¢ Real-time GraphQL subscriptions"
echo "  ‚Ä¢ Interactive maps with Mapbox"
echo
echo "‚ú® Happy coding!"
